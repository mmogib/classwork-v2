---
export const partial = true;
import GradeItem from "@components/GradeItem.astro";
import { checkStudentCode, getActiveCLWItems, getStudentCLW } from "@utils/clw";
const { method } = Astro.request;
const data = await Astro.request.formData();

const airbase = data.get("airbase") ? (data.get("airbase") as string) : null;
const pin = data.get("student_code")
  ? (data.get("student_code") as string)
  : null;

const getStudentGrades = async (airbase: string | null, pin: string | null) => {
  let status = false;
  let flds;
  let grades;
  if (airbase && pin) {
    try {
      status = await checkStudentCode(pin, airbase);
      flds = await getActiveCLWItems(airbase);
      grades = await getStudentCLW(airbase, pin, flds);
      return {
        status,
        grades: grades.sort((a, b) => (a.order >= b.order ? 1 : -1)),
        message: "",
      };
    } catch (error) {
      return { status, grades: [], message: error };
    }
  } else {
    return {
      status,
      grades: [],
      message: "Please make sure to provide acorrect personal code.",
    };
  }
};

const student = await getStudentGrades(airbase, pin);
---

{
  method === "POST" ? (
    student.status ? (
      <div class="flex flex-col w-full gap-2">
        <div class="flex flex-col w-full gap-2">
          <h1 class="font-semibold">Student Info</h1>
          {student.grades
            .filter((v) => v.category === "info")
            .map((f) => (
              <GradeItem item={f} />
            ))}
        </div>
        <div class="flex flex-col w-full gap-1">
          <h1 class="font-semibold">Student Grades</h1>
          {student.grades
            .filter((v) => v.category !== "info")
            .map((f) => (
              <GradeItem item={f} />
            ))}
        </div>
      </div>
    ) : (
      <div
        class="flex items-center p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400"
        role="alert"
      >
        <svg
          class="flex-shrink-0 inline w-4 h-4 me-3"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z" />
        </svg>
        <span class="sr-only">Info</span>
        <div>
          <span class="font-medium">Error!</span> {student.message}
        </div>
      </div>
    )
  ) : (
    ""
  )
}
